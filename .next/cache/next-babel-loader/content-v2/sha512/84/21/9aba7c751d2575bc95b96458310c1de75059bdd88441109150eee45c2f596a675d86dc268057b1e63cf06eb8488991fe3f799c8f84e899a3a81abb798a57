{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  search: '',\n  tag: ''\n};\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    setFilter(state, {\n      payload\n    }) {\n      return _objectSpread(_objectSpread({}, state), payload);\n    },\n\n    resetFilters() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  setFilter,\n  resetFilters\n} = filtersSlice.actions;\nexport default filtersSlice.reducer;","map":{"version":3,"sources":["/Users/scott.cox/Git/my-app/src/state/slices/filters.ts"],"names":["createSlice","initialState","search","tag","filtersSlice","name","reducers","setFilter","state","payload","resetFilters","actions","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,GAAG,EAAE;AAFY,CAArB;AAKA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAqB;AAC1B,6CACOD,KADP,GAEOC,OAFP;AAIH,KANK;;AAONC,IAAAA,YAAY,GAAG;AACX,aAAOT,YAAP;AACH;;AATK;AAHmB,CAAD,CAAhC;AAgBA,OAAO,MAAM;AAAEM,EAAAA,SAAF;AAAaG,EAAAA;AAAb,IAA8BN,YAAY,CAACO,OAAjD;AAEP,eAAeP,YAAY,CAACQ,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    search: '',\n    tag: '',\n};\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        setFilter(state, { payload }) {\n            return {\n                ...state,\n                ...payload,\n            }\n        },\n        resetFilters() {\n            return initialState;\n        }\n    },\n})\n\nexport const { setFilter, resetFilters } = filtersSlice.actions;\n\nexport default filtersSlice.reducer;"]},"metadata":{},"sourceType":"module"}