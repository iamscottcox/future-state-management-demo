{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/scott.cox/Git/my-app/src/components/Articles/Filters/Tags.tsx\";\nimport { useQuery } from \"react-query\";\nimport { fetchTags } from 'src/api/tags';\nexport const TagSelect = ({\n  selectedTag = '',\n  onChange\n}) => {\n  const {\n    data: tags\n  } = useQuery('tags', fetchTags);\n\n  const handleOnChange = e => {\n    onChange(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleOnChange,\n    value: selectedTag,\n    children: tags === null || tags === void 0 ? void 0 : tags.map(({\n      name,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: id,\n      children: name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\nexport default TagSelect;","map":{"version":3,"sources":["/Users/scott.cox/Git/my-app/src/components/Articles/Filters/Tags.tsx"],"names":["useQuery","fetchTags","TagSelect","selectedTag","onChange","data","tags","handleOnChange","e","target","value","map","name","id"],"mappings":";;AACA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SAASC,SAAT,QAA+B,cAA/B;AASA,OAAO,MAAMC,SAAoB,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG,EAAhB;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACpE,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBN,QAAQ,CAAQ,MAAR,EAAgBC,SAAhB,CAA/B;;AAEA,QAAMM,cAAc,GAAIC,CAAD,IAAuC;AAC1DJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,sBACI;AAAQ,IAAA,QAAQ,EAAEH,cAAlB;AAAkC,IAAA,KAAK,EAAEJ,WAAzC;AAAA,cACKG,IADL,aACKA,IADL,uBACKA,IAAI,CAAEK,GAAN,CAAU,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,kBACP;AAAiB,MAAA,KAAK,EAAEA,EAAxB;AAAA,gBAA6BD;AAA7B,OAAaC,EAAb;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdM;AAgBP,eAAeX,SAAf","sourcesContent":["import { ChangeEvent, FC } from 'react';\nimport { useQuery } from \"react-query\";\n\nimport { fetchTags, Tag } from 'src/api/tags';\n\ninterface OwnProps {\n    selectedTag: Tag['id'];\n    onChange: (value: string) => void;\n}\n\ntype Props = OwnProps;\n\nexport const TagSelect: FC<Props> = ({ selectedTag = '', onChange }) => {\n    const { data: tags } = useQuery<Tag[]>('tags', fetchTags);\n\n    const handleOnChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange(e.target.value);\n    }\n\n    return (\n        <select onChange={handleOnChange} value={selectedTag}>\n            {tags?.map(({ name, id }) => (\n                <option key={id} value={id}>{name}</option>\n            ))}\n        </select>\n    );\n}\n\nexport default TagSelect;"]},"metadata":{},"sourceType":"module"}